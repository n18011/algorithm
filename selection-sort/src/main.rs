/// 基本選択法(選択ソート)
fn main() {
    // sortしたい元の配列(ベクタ)
    let mut v = vec![4, 1, 3, 2];
    // sortしたい元の配列要素数-1回繰り返す
    for i in 1..(v.len()) {
        // 配列内の最小値を選び、i - 1の配列要素と交換する

        // 配列内の最小値を格納するための変数(i - 1の配列要素と比較するためiを初期値とする)
        let mut k = i;
        // i - 1の配列要素の次番から配列要素数になるまで繰り返す
        for j in (i + 1)..(v.len() + 1) {
            // 変数jのときの配列要素が最小値か比較する
            if v[k - 1] > v[j - 1] {
                // 変数jを最小値とする
                k = j;
            }
        }
        // 配列要素i - 1の値と最小値を交換する
        v.swap(i - 1, k - 1);
    }
    // sort結果をコンソール出力
    println!("{:?}", v);
}
