/// 基本挿入法(挿入ソート)
fn main() {
    // sortしたい元の配列(ベクタ)
    let mut v = vec![4, 1, 3, 2];
    // 二番目の要素から適切な位置に挿入するための変数を用意
    let mut i = 2;
    // 二番目の要素から配列の要素数までの回数繰り返す
    while i <= v.len() {
        // 配列インデックスの値とその次の値用の変数
        let mut j = i - 1;
        // 配列の後方側からすでに確定した値のインデックスまで繰り返す
        while j >= 1 {
            // 現在の値とその次の値の大きさを比較する
            if v[j - 1] > v[j] {
                // 現在の値が大きければ交換する
                v.swap(j - 1, j);
                j -= 1;
            } else {
                // 値が確定したら繰り返すを抜け出す
                j = 0;
            }
        }
        i += 1;
    }
    // sort結果をコンソール出力
    println!("{:?}", v);
}
